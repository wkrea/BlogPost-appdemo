name: Aprendiendo con un web API .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, CICD, BackEnd, FrontEnd]

jobs:
  build:
    # https://dev.to/kurtmkurtm/testing-net-core-apps-with-github-actions-3i76
    runs-on: ubuntu-latest
    # use release mode for all steps
    env:
      config: 'Release'

    steps:
    - name: Obtener Código fuente
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Instalar .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.401

    - name: Restauración de dependencias
      run: dotnet restore ./BackEnd/App.Api/

    - name: Compilar
      run: dotnet build --configuration Release --no-restore ./BackEnd/App.Api/App.Api.csproj

    - name: Elegir \#Build para el PR (if pr)
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3
      
      # set report file and title 
    - name: Titulo reporte de Tests
      run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "title=Tests para PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
              echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV
            else
              echo "title=Tests ${{github.run_number}}" >> $GITHUB_ENV
              echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
            fi
      
      # run tests with built project
    - name: Ejecutar Tests PR      
      run: dotnet test ./BackEnd/App.Test/App.Test.csproj --no-restore --no-build --configuration $config --logger:"liquid.md;LogFileName=${{env.file_name}};Title=${{env.title}};" 

    - name: Generate coverage report
      run: |
        cd ${{github.workspace}}/BackEnd/App.Test/
        dotnet test /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
    - name: Publish coverage report to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{github.workspace}}/BackEnd/App.Test/TestResults/coverage.info 
    - name: Build and deploy package
      run: |
        cd ./MyLibrary/
        dotnet publish -c=Release
        # deploy
